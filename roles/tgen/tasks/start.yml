---

- name: Configure and mount HugePages, then verify
  become: true
  block:
    - name: Allocate hugepages explicitly (if not using setup)
      shell: |
        echo {{ tgen.params.hugepages.count }} > /sys/kernel/mm/hugepages/hugepages-{{ tgen.params.hugepages.page_size_kb }}kB/nr_hugepages

    - name: Configure HugePages to "{{ tgen.params.hugepages.total_size }}" with "{{ tgen.params.hugepages.page_size }}" page size
      shell: |
        /tmp/{{ project.name }}/tgen/dpdk/usertools/dpdk-hugepages.py \
        -p "{{ tgen.params.hugepages.page_size }}" \
        --setup "{{ tgen.params.hugepages.total_size }}"


    - name: Check if hugetlbfs is mounted
      shell: mount | grep hugetlbfs
      register: hugetlbfs_mount_output

    - name: Print hugetlbfs mount info
      debug:
        var: hugetlbfs_mount_output.stdout

    - name: Print DPDK hugepage status
      shell: /tmp/{{ project.name }}/tgen/dpdk/usertools/dpdk-hugepages.py -s
      register: dpdk_hugepage_status

    - name: Show output of dpdk-hugepages.py -s
      debug:
        var: dpdk_hugepage_status.stdout


# Refer to roles/gvs/tasks/start.yml to reasoning
- name: Set network interfaces up/down and bind to DPDK
  become: true
  block:
    - name: Bring up MLX5 interfaces for native DPDK
      when: item.driver.dpdk == "mlx5_pci"
      loop: "{{ tgen.ports }}"
      command: 
        cmd: "ip link set {{ item.interface_name }} up"

    # Setup for uio_pci_generic driver (requires unbinding from kernel)
    - name: Prepare ports for uio_pci_generic
      when: tgen.ports | selectattr('driver.dpdk', 'equalto', 'uio_pci_generic') | list | length > 0
      block:

        - name: Bring down uio_pci_generic interfaces
          loop: "{{ tgen.ports }}"
          when: item.driver.dpdk == "uio_pci_generic"
          shell: "ip link set {{ item.interface_name }} down"

        - name: Load uio_pci_generic kernel module (only once)
          community.general.modprobe:
            name: uio_pci_generic
            state: present

        - name: Bind uio_pci_generic ports to DPDK
          loop: "{{ tgen.ports }}"
          when: item.driver.dpdk == "uio_pci_generic"
          shell: |
            python3 /tmp/{{ project.name }}/tgen/dpdk/usertools/dpdk-devbind.py -b {{ item.driver.dpdk }} {{ item.pcie_id }}

    # TODO: Add setup block for vfio-pci binding here


- name: Disable writes on /tmp (to avoid world-writable and insecure issues)
  shell: |
    chmod -R o-w /tmp/
  become: true

- name: Delete existing log file
  file: 
    name: "{{ collector.tgen.path }}"
    state: absent
  become: true

- name: Start the traffic generator
  shell: |
    /tmp/{{ project.name }}/tgen-run.sh
  become: true