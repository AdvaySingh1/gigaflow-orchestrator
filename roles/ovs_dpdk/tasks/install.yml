---

- name: Create tmp/{{ project.name }} directory
  file:
    path: /tmp/{{ project.name }}
    state: directory
  become: true

- name: Install OVS Dependencies
  block:
    - name: Add LLVM repository
      apt_repository:
        repo: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-12 main"
        state: present
        filename: llvm-toolchain-xenial-12
      become: true

    - name: Add LLVM GPG key
      apt_key:
        url: https://apt.llvm.org/llvm-snapshot.gpg.key
        state: present
      become: true

    - name: Update apt cache
      apt:
        update_cache: yes
      become: true

    - name: Install OVS/DPDK dependencies
      apt:
        name:
          - make
          - cmake
          - llvm-12
          - clang-12
          - meson
          - ninja-build
          - python3-pip
          - pkg-config
          - autotools-dev
          - autoconf
          - libtool
          - systemtap-sdt-dev
          - python-setuptools
        state: present
      become: true

    - name: Install pyelftools using pip
      pip:
        name: pyelftools
        extra_args: --upgrade
        executable: pip3
        state: present
      become: true

- name: Build and Install DPDK
  import_tasks: roles/dpdk/tasks/install.yml
  tags: install-dpdk

- name: Clone, Build and Install OVS
  block:
  - name: Clone OVS repository
    git:
      repo: "https://{{ git_username }}:{{ git_password }}@{{ ovs_dpdk.ovs.git.repo }}"
      dest: "/tmp/{{ project.name }}/ovs"
      version: "{{ ovs_dpdk.ovs.git.version }}"
    become: true
  
  - name: Create build directory
    file:
      path: "/tmp/{{ project.name }}/ovs/build"
      state: directory
    become: true

  - name: Bootstrap OVS build
    command:
      cmd: "./boot.sh"
      chdir: "/tmp/{{ project.name }}/ovs"
    become: true

  - name: Configure OVS build
    shell: |
      .././configure --with-dpdk=static CC=gcc
    args:
      chdir: "/tmp/{{ project.name }}/ovs/build"
    become: true

  - name: Build OVS
    shell: |
      make -j4
    args:
      chdir: "/tmp/{{ project.name }}/ovs/build"
    become: true

  - name: Install OVS
    shell: |
      make install
    args:
      chdir: "/tmp/{{ project.name }}/ovs/build"
    become: true

  - name: Add /usr/local/share/openvswitch/scripts to $PATH in {{ ansible_env.HOME }}/.profile
    lineinfile:
      path: "{{ ansible_env.HOME }}/.profile"
      line: "export PATH=$PATH:/usr/local/share/openvswitch/scripts"
    become: true

  - name: Add /usr/local/share/openvswitch/scripts to $PATH in /root/.profile
    lineinfile:
      path: "/root/.profile"
      line: "export PATH=$PATH:/usr/local/share/openvswitch/scripts"
    become: true

  - name: Add /usr/local/var/run/openvswitch/db.sock to $DB_SOCK in {{ ansible_env.HOME }}/.profile
    lineinfile:
      path: "{{ ansible_env.HOME }}/.profile"
      line: "export DB_SOCK=/usr/local/var/run/openvswitch/db.sock"
    become: true

  - name: Add /usr/local/var/run/openvswitch/db.sock to $DB_SOCK in /root/.profile
    lineinfile:
      path: "/root/.profile"
      line: "export DB_SOCK=/usr/local/var/run/openvswitch/db.sock"
    become: true

- name: Install OVS logger
  import_tasks: roles/logging/tasks/install.yml
  tags: install-logger
