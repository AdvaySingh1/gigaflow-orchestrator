---
- name: Delete the bridge and stop GVS
  ignore_errors: true
  become: true
  block:
  - name: Variable to update PATH with GVS script
    set_fact:
      ovs_environment:
        PATH: /usr/local/share/openvswitch/scripts:{{ ansible_env.PATH }}

  - name: Delete ports from {{ gvs.ovs.bridge.name }}
    shell: |
      ovs-vsctl del-port {{ gvs.ovs.bridge.name }} {{ item.bridge_port_name }}
    loop: "{{ gvs.ovs.bridge.ports }}"

  - name: Delete the bridge
    openvswitch.openvswitch.openvswitch_bridge:
      bridge: "{{ gvs.ovs.bridge.name }}"
      state: absent
    ignore_errors: true
  
  - name: Stop GVS
    environment: "{{ ovs_environment }}"
    become: true
    shell: |
      ovs-vsctl --all destroy Open_vSwitch
      ovs-ctl --delete-bridges stop
    ignore_errors: true


# Not needed for mlx5_core kernel module
- name: Unbind DPDK ports and restore network interfaces
  become: true
  block:

    # Rebind uio_pci_generic ports back to kernel and bring them up
    - name: Restore uio_pci_generic ports to kernel
      when: gvs.ovs.bridge.ports | selectattr('driver.dpdk', 'equalto', 'uio_pci_generic') | list | length > 0
      block:

        - name: Unbind from DPDK and rebind to kernel
          loop: "{{ gvs.ovs.bridge.ports }}"
          when: item.driver.dpdk == "uio_pci_generic"
          shell: |
            python3 /tmp/{{ project.name }}/dpdk/usertools/dpdk-devbind.py -b {{ item.driver.kernel }} {{ item.pcie_id }}
          changed_when: true

        - name: Bring up network interfaces
          loop: "{{ gvs.ovs.bridge.ports }}"
          when: item.driver.dpdk == "uio_pci_generic"
          shell: "ip link set {{ item.interface_name }} up"
          changed_when: false

    # TODO: Add rebind logic for vfio-pci ports if used


- name: Bring up network interfaces
  shell: |
    ip link set {{ item.interface_name }} up
  loop: "{{ tgen.ports }}"
  become: true


- name: Reset HugePages and verify cleanup
  become: true
  block:
    - name: Unmount and clear HugePages
      shell: |
        /tmp/{{ project.name }}/dpdk/usertools/dpdk-hugepages.py -u
        /tmp/{{ project.name }}/dpdk/usertools/dpdk-hugepages.py -c

    - name: Show HugePages status
      shell: /tmp/{{ project.name }}/dpdk/usertools/dpdk-hugepages.py -s
      register: hugepage_status_after_reset
      changed_when: false

    - name: Print HugePages status after reset
      debug:
        var: hugepage_status_after_reset.stdout

    - name: Check hugetlbfs mount cleanup
      shell: mount | grep hugetlbfs || true
      register: hugetlbfs_mount_check_after_reset
      changed_when: false

    - name: Print hugetlbfs mount state after reset
      debug:
        var: hugetlbfs_mount_check_after_reset.stdout
